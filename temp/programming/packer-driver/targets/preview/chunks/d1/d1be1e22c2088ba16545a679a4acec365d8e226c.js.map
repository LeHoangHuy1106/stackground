{"version":3,"sources":["file:///D:/PROJECT/stackground/assets/Scripts/Scenes/Play/Controller.ts"],"names":["_decorator","Component","Node","input","Input","Prefab","view","Vec3","tween","random","director","AudioController","ClipSound","Constants","DataManager","NodeCustom","ObjectPool","View","ccclass","property","Controller","groundQueue","groundNext","width","height","groundExcess","score","isClose","onLoad","Instance","CreateListObject","ground","parentGround","on","EventType","TOUCH_START","onTouchStart","screenSize","getVisibleSize","start","CreateGroundStart","i","posX","groundCurr","GetSize","x","posY","GetPositon","y","getObject","push","SetPositon","SetGravity","SetIsMoving","SetSize","GetRb","enabled","GetNode","active","StateGood","newSizeX","Math","min","increaseSize","audio","PlaySound","good","StateNormal","narmal","abs","posCurr","newPos","z","size_Excess","pos_Excess","StateBad","getInstance","SetData","scheduleOnce","loadScene","mainScene","event","distance","over","SetScore","CameraFollow","BackgroundFollow","max","cameraFollow","to","position","background"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, input, EventTouch, Input, Prefab, view, Vec3, math, tween, random, director } from 'cc';\r\nimport { AudioController, ClipSound } from '../../Extention/AudioController';\r\nimport { Constants } from '../../Extention/Constants';\r\nimport { DataManager } from '../../Extention/DataManager';\r\nimport { NodeCustom } from '../../Extention/NodeCustom';\r\nimport { ObjectPool } from '../../Extention/ObjectPool';\r\nimport { View } from './View';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Controller')\r\nexport class Controller extends Component {\r\n    @property(Prefab) ground: Prefab;\r\n    @property(Node) parentGround: Node;\r\n    @property(NodeCustom) groundCurr: NodeCustom\r\n    @property(Node) cameraFollow: Node;\r\n    @property(Node) background: Node;\r\n    @property(View) view: View;\r\n    @property(AudioController) audio: AudioController;\r\n\r\n    private groundQueue: NodeCustom[] = [];\r\n    private groundNext: NodeCustom;\r\n    private width: number;\r\n    private height: number;\r\n    private groundExcess: NodeCustom;\r\n    private score: number = 0;\r\n    private isClose = false;\r\n\r\n\r\n\r\n    onLoad(): void {\r\n        ObjectPool.Instance.CreateListObject(Constants.ground, this.ground, 20, this.parentGround)\r\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        const screenSize = view.getVisibleSize()\r\n        this.width = screenSize.width;\r\n        this.height = screenSize.height;\r\n    }\r\n    start(): void {\r\n        this.CreateGroundStart();\r\n    }\r\n    CreateGroundStart(): void {\r\n        let i = random();\r\n        let posX = this.groundCurr.GetSize().x / 2 + this.width / 2;\r\n        if (i<0.5){\r\n            posX = -this.groundCurr.GetSize().x / 2 - this.width / 2;\r\n        }\r\n\r\n        let posY = this.groundCurr.GetPositon().y + this.groundCurr.GetSize().y + 1;\r\n        this.groundNext = ObjectPool.Instance.getObject(Constants.ground, this.parentGround)\r\n        this.groundQueue.push(this.groundNext)\r\n        this.groundNext.SetPositon(new Vec3(posX, posY, 0));\r\n        this.groundNext.SetGravity(0);\r\n        this.groundNext.SetIsMoving(false);\r\n        this.groundNext.SetIsMoving(true);\r\n        this.groundNext.SetSize(this.groundCurr.GetSize().x);\r\n        this.groundNext.GetRb().enabled = true;\r\n        this.groundNext.GetNode().active = true;\r\n\r\n    }\r\n\r\n    private StateGood(): void {\r\n        this.groundNext.GetRb().enabled = false;\r\n        let newSizeX = Math.min(500, this.groundNext.GetSize().x * 1.2)\r\n\r\n        this.groundNext.increaseSize(newSizeX)\r\n        this.groundCurr = this.groundNext;\r\n        this.CreateGroundStart();\r\n        this.audio.PlaySound(ClipSound.good)\r\n\r\n    }\r\n    private StateNormal(): void {\r\n        this.audio.PlaySound(ClipSound.narmal);\r\n        this.groundNext.GetRb().enabled = false;\r\n        this.groundNext.SetIsMoving(false);\r\n        let newSizeX = this.groundNext.GetSize().x - Math.abs(this.groundCurr.GetPositon().x - this.groundNext.GetPositon().x)\r\n        let posCurr = this.groundNext.GetPositon();\r\n        let newPos = new Vec3(posCurr.x + (this.groundCurr.GetPositon().x - this.groundNext.GetPositon().x) / 2, posCurr.y, posCurr.z)\r\n        this.groundNext.SetSize(newSizeX)\r\n        this.groundNext.SetPositon(newPos);\r\n        // create groundExcess\r\n        this.groundExcess = ObjectPool.Instance.getObject(Constants.ground, this.parentGround);\r\n        let size_Excess = Math.abs(this.groundCurr.GetSize().x - this.groundNext.GetSize().x);\r\n        let pos_Excess = null;\r\n        if (this.groundNext.GetPositon().x < this.groundCurr.GetPositon().x) {\r\n            pos_Excess = new Vec3(this.groundNext.GetPositon().x - this.groundNext.GetSize().x / 2 - size_Excess / 2, this.groundNext.GetPositon().y, 0)\r\n        }\r\n        else {\r\n            pos_Excess = new Vec3(this.groundNext.GetPositon().x + this.groundNext.GetSize().x / 2 + size_Excess / 2, this.groundNext.GetPositon().y, 0)\r\n        }\r\n        this.groundQueue.push(pos_Excess);\r\n\r\n        this.groundExcess.SetSize(size_Excess)\r\n        this.groundExcess.SetPositon(pos_Excess);\r\n        this.groundExcess.GetRb().enabled = true\r\n        this.groundExcess.SetIsMoving(false);\r\n        this.groundExcess.GetNode().active = true;\r\n        this.groundExcess.SetGravity(1);\r\n        this.groundCurr = this.groundNext;\r\n        this.CreateGroundStart();\r\n    }\r\n\r\n\r\n\r\n    private StateBad(): void {\r\n        \r\n        this.isClose = true;\r\n        this.groundNext.SetIsMoving(false);\r\n        this.groundNext.SetGravity(1.5);\r\n        DataManager.getInstance().SetData(Constants.score,this.score);\r\n        this.scheduleOnce(()=> director.loadScene(Constants.mainScene),2)\r\n    }\r\n    onTouchStart(event: EventTouch) {\r\n        \r\n        if (this.isClose) {\r\n            return;\r\n        }\r\n        let distance = Math.abs(this.groundCurr.GetPositon().x - this.groundNext.GetPositon().x)\r\n        if (distance > this.groundCurr.GetSize().x) {\r\n            this.audio.PlaySound(ClipSound.over);\r\n            this.StateBad();\r\n        }\r\n        else if (distance < this.groundCurr.GetSize().x && distance > 1) {\r\n            this.StateNormal();\r\n            this.view.SetScore(this.score += 1)\r\n        }\r\n        else {\r\n            this.StateGood();\r\n            this.view.SetScore(this.score += 2)\r\n        }\r\n        this.CameraFollow();\r\n        this.BackgroundFollow();\r\n\r\n    }\r\n    CameraFollow(): void {\r\n        let posX = this.width / 2;\r\n        let posY = Math.max(this.height / 2, this.groundCurr.GetPositon().y + this.height / 2);\r\n        tween(this.cameraFollow)\r\n            .to(0.3, { position: new Vec3(posX, posY, 0) })\r\n            .start();\r\n\r\n    }\r\n    BackgroundFollow(): void {\r\n        let posX = this.cameraFollow.position.x - this.width / 2\r\n        let posY = this.cameraFollow.position.y - this.height / 2\r\n        tween(this.background)\r\n            .to(0.3, { position: new Vec3(posX, posY, 0) })\r\n            .start();\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}