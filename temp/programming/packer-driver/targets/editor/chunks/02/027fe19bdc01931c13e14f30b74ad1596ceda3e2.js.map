{"version":3,"sources":["file:///D:/PROJECT/stackground/assets/Scripts/Extention/AudioController.ts"],"names":["_decorator","Component","AudioSource","AudioClip","Toggle","Constants","DataManager","ccclass","property","ClipSound","AudioController","onLoad","Setup","bntSound","node","on","EventType","TOGGLE","SoundEvent","btnMusic","MusicEvent","isChecked","source","volume","getInstance","SetData","dataSound","sourceMusic","dataMusic","isSound","GetData","isMusic","PlayMusic","PlaySound","sound","button","clip","clips","play","good","narmal","over","Stop","stop","clipMusic"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, AudioSource, AudioClip, Toggle } from 'cc';\r\nimport { Constants } from './Constants';\r\nimport { DataManager } from './DataManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum ClipSound {\r\n    button, good, narmal, over\r\n}\r\n@ccclass('AudioController')\r\nexport class AudioController extends Component {\r\n    @property(AudioSource) source: AudioSource;\r\n    @property([AudioClip]) clips: AudioClip[] = [];\r\n    @property(Toggle) bntSound: Toggle;\r\n\r\n    @property(AudioSource) sourceMusic: AudioSource;\r\n    @property(AudioClip) clipMusic: AudioClip;\r\n    @property(Toggle) btnMusic: Toggle;\r\n\r\n    onLoad(): void {\r\n        this.Setup();\r\n        if (this.bntSound) {\r\n            this.bntSound.node.on(Toggle.EventType.TOGGLE, this.SoundEvent, this);\r\n        }\r\n        if (this.btnMusic) {\r\n            this.btnMusic.node.on(Toggle.EventType.TOGGLE, this.MusicEvent, this);\r\n        }\r\n\r\n    }\r\n\r\n    private SoundEvent() {\r\n        if (!this.bntSound.isChecked) {\r\n            this.source.volume = 0;\r\n            DataManager.getInstance().SetData(Constants.dataSound, false);\r\n        }\r\n        else {\r\n            this.source.volume = 1;\r\n            DataManager.getInstance().SetData(Constants.dataSound, true);\r\n        }\r\n    }\r\n\r\n    private MusicEvent(): void {\r\n        if (!this.btnMusic.isChecked) {\r\n            this.sourceMusic.volume = 0;\r\n            DataManager.getInstance().SetData(Constants.dataMusic, false);\r\n        }\r\n        else {\r\n            this.sourceMusic.volume = 1;\r\n            DataManager.getInstance().SetData(Constants.dataMusic, true);\r\n\r\n        }\r\n    }\r\n\r\n    private Setup(): void {\r\n        let isSound = DataManager.getInstance().GetData(Constants.dataSound, true)\r\n        if (this.bntSound) {\r\n            this.bntSound.isChecked = isSound;\r\n        }\r\n        if (isSound) {\r\n            this.source.volume = 1;\r\n        }\r\n        else {\r\n            this.source.volume = 0;\r\n        }\r\n\r\n        let isMusic = DataManager.getInstance().GetData(Constants.dataMusic, true)\r\n        if (this.btnMusic) {\r\n            this.btnMusic.isChecked = isMusic;\r\n        }\r\n        if (isMusic) {\r\n            this.sourceMusic.volume = 1;\r\n        }\r\n        else {\r\n            this.sourceMusic.volume = 0;\r\n        }\r\n\r\n        this.PlayMusic();\r\n    }\r\n\r\n    public PlaySound(sound: ClipSound) {\r\n        switch (sound) {\r\n            case ClipSound.button:\r\n                this.source.clip = this.clips[0];\r\n                this.source.play();\r\n                break;\r\n            case ClipSound.good:\r\n                this.source.clip = this.clips[1];\r\n                this.source.play();\r\n                break;\r\n            case ClipSound.narmal:\r\n                this.source.clip = this.clips[2];\r\n                this.source.play();\r\n                break;\r\n            case ClipSound.over:\r\n\r\n                this.source.clip = this.clips[3];\r\n                this.source.play();\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    public Stop(): void {\r\n        this.source.stop();\r\n    }\r\n    public PlayMusic(): void {\r\n        this.sourceMusic.clip = this.clipMusic;\r\n        this.source.play();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}